// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// l2fpop
List l2fpop(std::vector<double> vectData, double l0penalty, double l2penalty, std::string type);
RcppExport SEXP _l2FPOP_l2fpop(SEXP vectDataSEXP, SEXP l0penaltySEXP, SEXP l2penaltySEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type vectData(vectDataSEXP);
    Rcpp::traits::input_parameter< double >::type l0penalty(l0penaltySEXP);
    Rcpp::traits::input_parameter< double >::type l2penalty(l2penaltySEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(l2fpop(vectData, l0penalty, l2penalty, type));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_l2FPOP_l2fpop", (DL_FUNC) &_l2FPOP_l2fpop, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_l2FPOP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
