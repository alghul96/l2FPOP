% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DeCAFS.R
\name{DeCAFS}
\alias{DeCAFS}
\title{Main DeCAFS function}
\usage{
DeCAFS(
  vectData,
  beta = 2 * log(length(vectData)),
  modelParam = estimateParameters(vectData),
  penalties = NULL,
  type = "std"
)
}
\arguments{
\item{vectData}{A vector of observations y}

\item{beta}{The l0 penalty. The default one is 2 * log(N) where N is the lenght of the data.}

\item{type}{The type of change one wants to look for. At the moment only 'std' is implemented.}

\item{lambda}{The l2 penalty for penalising over random fluctuations. When NULL it is estimated robustly from the data.}

\item{gamma}{The l2 penalty for penalising over autocorrelated noise. When NULL it is estimated robustly from the data.}

\item{phi}{The autocorrelation parameter phi. When NULL it is estimated robustly from the data. If one wish to exclude the autocorrelated component, then set phi = 0. In this case, then the gamma paramer is penalising over additional i.i.d. gaussian noise in the data.}
}
\value{
Returns a list where: 
$changepoints is the vector of change-point locations, 
$signal is the estimated signal without the auto-correlated noise, 
$costFunction is the optimal cost in form of piecewise quadratics at the end of the sequence, 
$estimatedParameters is a list of parameters estimates (if estimated), 
$data is the sequence of observations.
}
\description{
Detecting abrupt changes in mean in presence of autocorrelation or random fluctuations.
}
\examples{
library(ggplot2)
set.seed(42)
Y = dataRWAR(n = 1e3, poisParam = .01, meanGap = 15, phi = .5, sdEta = 1, sdNu = 3)
y = Y$y
res = DeCAFS(y)
ggplot(data.frame(t = 1:length(y), y), aes(x = t, y = y)) +
  geom_point() +
  geom_vline(xintercept = res$changepoints, color = "red") +
  geom_vline(xintercept = Y$changepoints, col = "blue",  lty = 3)
}
